/*
 * @Description: 
 * @Version: 2.0
 * @Autor: 阳秦林
 * @Date: 2022-03-14 16:01:08
 * @LastEditors: 阳秦林
 * @LastEditTime: 2022-03-17 09:49:45
 */
// /*
//  * @Description: 抽象类
//  * @Version: 2.0
//  * @Autor: 阳秦林
//  * @Date: 2022-03-14 16:01:08
//  * @LastEditors: 阳秦林
//  * @LastEditTime: 2022-03-15 22:04:20
//  */
// /*
//     抽象类就是不能使用new方法进行实例化的类（不能被实例化，可以有多个抽象方法），
//     即没有具体实例对象的类，抽象类有点类似于“模板”的作用,
//     目的是根据其格式来创建和修改新的类，对象不能由抽象类直接创建，
//     只可以通过抽象类派生出新的子类，再由其子类来创建对象，
//     当一个类被声明为抽象类时，要在这个类前面加上修饰符abstract,
//     在抽象类中的成员方法可以包括一般方法和抽象方法
// */
// package day11;
// abstract class Animal {
//     public abstract void show ();// 类似模板abstract 
// }
// class dog extends Animal{

//     public void show() {
//         System.out.println("dd");

//     }

// }
// public class objectText {

// }